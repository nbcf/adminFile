/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TEsteFiltroData.java
 *
 * Created on 05/07/2011, 14:00:38
 */

package br.com.bueno.view;


import br.com.bueno.util.data;
import bsh.ParseException;
import java.io.File;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.regex.PatternSyntaxException;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
public class TEsteFiltroData extends javax.swing.JFrame {
  data mostra_data;
    /** Creates new form TEsteFiltroData */
    public TEsteFiltroData() {
        initComponents();
         mostra_data = new data();
       mostra_data.le_data();
       mostra_data.le_hora();
       jLabel1.setText(mostra_data.dia_semana + ", " + mostra_data.dia + " de " + mostra_data.mes + " de " + mostra_data.ano);
       timer1.start();
     //  Jtable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        timer1 = new org.netbeans.examples.lib.timerbean.Timer();
        timer2 = new org.netbeans.examples.lib.timerbean.Timer();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        Data_final = new com.toedter.calendar.JDateChooser();
        Data_Inicial = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();

        timer1.addTimerListener(new org.netbeans.examples.lib.timerbean.TimerListener() {
            public void onTime(java.awt.event.ActionEvent evt) {
                timer1OnTime(evt);
            }
        });

        timer2.addTimerListener(new org.netbeans.examples.lib.timerbean.TimerListener() {
            public void onTime(java.awt.event.ActionEvent evt) {
                timer2OnTime(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextField1.setText("C:\\Arquivos1\\");
            jTextField1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField1ActionPerformed(evt);
                }
            });

            jButton1.setText("Listar");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            jLabel1.setText("jLabel1");

            jTextField2.setText("jTextField2");

            jTable2.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "Diretorio", "Nome Arquivo", "Data Criação", "Hora Criação"
                }
            ));
            jScrollPane2.setViewportView(jTable2);

            jButton2.setText("jButton2");
            jButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton2ActionPerformed(evt);
                }
            });

            jLabel2.setText("jLabel2");

            jButton3.setText("Filtrar Por Data");
            jButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton3ActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton1)
                                    .addGap(136, 136, 136)
                                    .addComponent(jButton2)
                                    .addGap(107, 107, 107)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(40, 40, 40)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(111, 111, 111)
                                    .addComponent(Data_Inicial, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(34, 34, 34)
                                    .addComponent(Data_final, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton3)))
                            .addContainerGap(26, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 437, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addGap(359, 359, 359))))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2))
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2))
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(69, 69, 69)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton3)
                        .addComponent(Data_Inicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Data_final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(122, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void timer1OnTime(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timer1OnTime
     mostra_data.le_hora();
    jLabel1.setText("Hora atual " + mostra_data.hora);
    }//GEN-LAST:event_timer1OnTime

    private void timer2OnTime(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timer2OnTime



    }//GEN-LAST:event_timer2OnTime

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     Jtable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed


    }//GEN-LAST:event_jTable1KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//    jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
//    jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
//
//   DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
//        modelo.setNumRows(0);



        jTable2.getColumnModel().getColumn(0).setPreferredWidth(100);
    jTable2.getColumnModel().getColumn(1).setPreferredWidth(100);
    jTable2.getColumnModel().getColumn(2).setPreferredWidth(100);
   DefaultTableModel modelo2 = (DefaultTableModel)jTable2.getModel();
        modelo2.setNumRows(0);

        for(int i = 0 ; i<(Integer)Integer.parseInt(jLabel2.getText());i++){
      

        jTable1.setRowSelectionInterval(0, 0);
        int jColunnTable = 0;
        Object obj = jTable1.getValueAt(jTable1.getSelectedRow(),jColunnTable);

        String str1 = String.valueOf(obj);



         try
      {
      File diretoriopr = new File(str1);

        DateFormat formatDatacr = new SimpleDateFormat("dd/MM/yyyy");
        String data = formatDatacr.format(new Date(diretoriopr.lastModified()));
         SimpleDateFormat formatHora = new SimpleDateFormat("HH:mm:ss");
         String hora = formatHora.format(new Date(diretoriopr.lastModified()));
         Date date2 = (Date)formatDatacr.parse(data);
         jDateChooser1.setDate(date2);
jTextField3.setText(hora);

  
   modelo2.addRow(new Object[]{diretoriopr.getAbsolutePath(),diretoriopr.getName(),data});


      }catch (Exception err){ }
        


        }




    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    jTable2.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(100);

        DefaultTableModel modelo2 = (DefaultTableModel)jTable2.getModel();
        modelo2.setNumRows(0);

        int jColunnTable = 0;
        Object obj = jTable1.getValueAt(jTable1.getSelectedRow(),jColunnTable);
        String str1 = String.valueOf(obj);
    try
      {
      File diretoriopr = new File(str1);

//         tf_patch_arquivo.setText(diretorio.getAbsolutePath());
//         tf_nome_arquivo.setText(diretorio.getName());
//         String dt = String.valueOf(diretorio.hashCode());
//         tf_hash_arquivo.setText(String.valueOf(dt));
//         Long tam = diretorio.length();
//         Long  kb = tam / 1024;
//         String kj = String.valueOf(kb);
//         Double db = Double.parseDouble(kj);
//         tf_tam.setText(String.valueOf(db)+" "+"Kb");


//
        DateFormat formatDatacr = new SimpleDateFormat("dd/MM/yyyy");
        String data = formatDatacr.format(new Date(diretoriopr.lastModified()));
         SimpleDateFormat formatHora = new SimpleDateFormat("HH:mm:ss");
         String hora = formatHora.format(new Date(diretoriopr.lastModified()));
         Date date2 = (Date)formatDatacr.parse(data);
         jDateChooser1.setDate(date2);
jTextField3.setText(hora);


   modelo2.addRow(new Object[]{diretoriopr.getAbsolutePath(),diretoriopr.getName(),data});

//        jDateChooser2.setDate(date2);
//
//        tf_hora_criacao.setText(hora);
//        tf_acao_arquivo.setText("Movido");
//        tf_usuario_da_acao.setText(jLabel7.getText());
//        tf_dir_saida.setText(tf_saida.getText());
//        tf_hora_acao.setText(""+mostra_data.hora);
//            Date dataTempo = new Date();
//            String dia = ""+dataTempo.getDate();
//            String mes = ""+String.valueOf(dataTempo.getMonth()+1);
//            String ano = ""+(1900 + dataTempo.getYear());
//            if (Integer.parseInt(mes)<=9)
//            mes = "0"+mes;
//         //   jDateChooser1.setDate(dataTempo);
      }catch (Exception err){ }
       //   save_transaction.doClick();

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
Jtable();     
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TEsteFiltroData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Data_Inicial;
    private com.toedter.calendar.JDateChooser Data_final;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private org.netbeans.examples.lib.timerbean.Timer timer1;
    private org.netbeans.examples.lib.timerbean.Timer timer2;
    // End of variables declaration//GEN-END:variables
   public void Jtable()
    {

        jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);

        DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        modelo.setNumRows(0);

                try
                {
                    File arquivo = new File (jTextField1.getText());
                    String arquivos [] = arquivo.list();

                for (String s : arquivos)

                       {
                       File f = new File(s);      
                      int  numeroLinhas = modelo.getRowCount();
                      jLabel2.setText(String.valueOf(numeroLinhas));
                     String filtro = f.getName();
                     int tmt = filtro.length();
                     String filtrado = filtro.substring((tmt-3), tmt);
                     String filnome = filtro.substring(0, (tmt-3));
                     File g = new File(jTextField1.getText()+filnome+filtrado);

         DateFormat formatDatacr = new SimpleDateFormat("dd/MM/yyyy");
         String data = formatDatacr.format(new Date(g.lastModified()));

         Date in = new Date();
         Date al = new Date();
         Date q = (Date)formatDatacr.parse(data);
         try
         {
         al = Data_final.getDate();
         in = Data_Inicial.getDate();


         }catch (Exception e){System.out.println(e);}

         if (in.before(q) && al.after(q)){

         if(filtrado.equalsIgnoreCase("jpg") || (filtrado.equals("gif")) || (filtrado.equalsIgnoreCase("bmp")) || (filtrado.equalsIgnoreCase("png")) )
         {
          modelo.addRow(new Object[]{(jTextField1.getText()+filnome+filtrado),filnome+filtrado,data});
         }else {}} else{}
           

                }}catch (Exception exc){
                JOptionPane.showMessageDialog(null,"Naõ pode localizar os arquivos"+ exc);
       }
   }

    public void SelecSetaSalvaMoveEx (){

              jTable2.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(100);

        DefaultTableModel modelo2 = (DefaultTableModel)jTable2.getModel();
        modelo2.setNumRows(1);
    //  if(tf_variavel_pesquisa.getText().equals("") || tf_variavel_pesquisa.getText().equals(null)/* || tf_variavel_pesquisa.getText().isEmpty()*/){

     //  Jtable();
    //   String va = JOptionPane.showInputDialog("Informe A Variável de Pesquisa");
    //   tf_variavel_pesquisa.setText(va);
   //   } else if (tf_variavel_pesquisa.getText() != null ){
   //     tf_pesquisa.setText(tf_variavel_pesquisa.getText());
//        tf_pesquisa.requestFocusInWindow();
//        tf_pesquisa.setCaretPosition(1);
//        bt_pesquisar.doClick();
//        insert_transaction.doClick();
        jTable2.setRowSelectionInterval(0, 0);
        int jColunnTable = 0;
        Object obj = jTable2.getValueAt(jTable2.getSelectedRow(),jColunnTable);
        String str1 = String.valueOf(obj);
    try
      {
      File diretorio = new File(str1);
//
//         tf_patch_arquivo.setText(diretorio.getAbsolutePath());
//         tf_nome_arquivo.setText(diretorio.getName());
//         String dt = String.valueOf(diretorio.hashCode());
//         tf_hash_arquivo.setText(String.valueOf(dt));
//         Long tam = diretorio.length();
//         Long  kb = tam / 1024;
//         String kj = String.valueOf(kb);
//         Double db = Double.parseDouble(kj);
//         tf_tam.setText(String.valueOf(db)+" "+"Kb");
//
//

         DateFormat formatDatacr = new SimpleDateFormat("dd/MM/yyyy");
         String data = formatDatacr.format(new Date(diretorio.lastModified()));
//         SimpleDateFormat formatHora = new SimpleDateFormat("HH:mm:ss");
//         String hora = formatHora.format(new Date(diretorio.lastModified()));
         Date date2 = (Date)formatDatacr.parse(data);
        jDateChooser1.setDate(date2);
//
  modelo2.addRow(new Object[]{data,diretorio.lastModified()});
//        jDateChooser2.setDate(date2);
//
//        tf_hora_criacao.setText(hora);
//        tf_acao_arquivo.setText("Movido");
//        tf_usuario_da_acao.setText(jLabel7.getText());
//        tf_dir_saida.setText(tf_saida.getText());
//        tf_hora_acao.setText(""+mostra_data.hora);
//            Date dataTempo = new Date();
//            String dia = ""+dataTempo.getDate();
//            String mes = ""+String.valueOf(dataTempo.getMonth()+1);
//            String ano = ""+(1900 + dataTempo.getYear());
//            if (Integer.parseInt(mes)<=9)
//            mes = "0"+mes;
//            jDateChooser1.setDate(dataTempo);
//      }catch (Exception err){ }
      //    save_transaction.doClick();
        // MOVE O ARQUIVO
//        try
//        {
//             File dirMov = new File(str1);
//
//    FileInputStream fis = null;
//    fis = new FileInputStream (dirMov.getAbsolutePath());
//    FileChannel origem = null ;
//    origem = fis.getChannel();
//    FileOutputStream fos = null;
//    fos = new FileOutputStream(tf_saida.getText()+"\\"+dirMov.getName());
//    FileChannel destino = null;
//    destino = fos.getChannel();
//    destino.transferFrom(origem, 0, origem.size());
//    origem.close();
//    destino.close();
        }catch(Exception e){}
//        try// DELETAR O ARQUIVO
//        {File arqu = new File (str1);if(arqu.exists())
//        {arqu.delete();}}catch(Exception e){}
//        Jtable();}
//        int ll = jTable1.getRowCount();
//        if(ll == 0 ){
//        JOptionPane.showMessageDialog(null, "Não há Arquivos Listados na Grada\nO Mecanismo de Cópia irá Terminar","AVISO DO SISTEMA", JOptionPane.INFORMATION_MESSAGE);
//        dispose();
     //   }
    }



  }
